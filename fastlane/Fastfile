# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  lane :beta do
    api_key = app_store_connect_api_key(
        key_id: ENV['APPLE_KEY_ID'],
        issuer_id: ENV['APPLE_KEY_ISSUER_ID'],
        key_content: ENV['APPLE_KEY_CONTENT'],
        in_house: false
    )
    setup_ci if ENV['CI']
    match(type: 'appstore')
    increment_build_number(build_number: ENV['GITHUB_RUN_NUMBER'])
    get_version_number
    build_app
        scheme: TbilisiCleanups
    upload_to_testflight(
        api_key: api_key,
        app_identifier: ENV['APP_ID'],
        team_id: ENV['TEAM_ID'],
        team_name: ENV['TEAM_NAME'],
        skip_waiting_for_build_processing: true,
        skip_submission: true
    )

    # Add a Git tag
    git_tag = "v#{lane_context[SharedValues::VERSION_NUMBER]}.#{ENV['GITHUB_RUN_NUMBER']}"
    UI.message("Adding a Git tag #{git_tag}...")
    add_git_tag(
      tag: git_tag
    )

    # Push git tag to remote
    UI.message("Pushing Git tag #{git_tag} to the remote repository...")
    cmd = "git push origin #{git_tag}"
    Actions.sh(cmd)
  end
end

